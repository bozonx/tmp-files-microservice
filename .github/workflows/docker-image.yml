name: Docker Image CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get versions from package.json
        id: versions
        run: |
          echo "APP_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "NODE_VERSION=$(node -p "require('./package.json').engines.node.replace('>=', '').split('.')[0]")" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.versions.outputs.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install

      - name: Run unit tests
        run: pnpm test:unit

      - name: Build the project
        run: pnpm build

      - name: Build the Docker image
        run: |
          docker build . --file docker/Dockerfile --build-arg NODE_MAJOR=${{ steps.versions.outputs.NODE_VERSION }} --tag bozonx/stt-gateway-microservice:${{ steps.versions.outputs.APP_VERSION }}
          docker build . --file docker/Dockerfile --build-arg NODE_MAJOR=${{ steps.versions.outputs.NODE_VERSION }} --tag bozonx/stt-gateway-microservice:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        run: |
          docker push bozonx/stt-gateway-microservice:${{ steps.versions.outputs.APP_VERSION }}
          docker push bozonx/stt-gateway-microservice:latest
